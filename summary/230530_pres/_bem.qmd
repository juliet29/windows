# Analysis: Building Energy Modeling 

## Energy+ Simulation
<!-- - can recreate real life scenario and simplify so don't have noise  -->
:::: {.columns}

::: {.column width="50%"}
- info about E+ model
- info 2 about E+ mode 
:::

::: {.column width="50%"}
![Energy+ Model](figures/bem_01/model.png)
:::

::::


## Energy+ Simulation Results  
```{python}

sim_data_path = "../../data/energy_model/230307_match.pkl"
sim_data = pd.read_pickle(sim_data_path)

# smoothing on different time series than the observation 
sim_smooth = wd2.make_stl_smooth(series=sim_data["Always Closed"], time=None, model="additive")

# rename label in simulation dataframe to match class
sim_data.rename(columns={"Varied": "Temp C"}, inplace=True)


s1 = wd2.Window_Detect2(sim_data)
s1.analyze_window_change(smooth_fx=None, sim_smooth=sim_smooth)

all_names = ["Window", "Observed Temp", "Smoothed", "Difference", "Deriv1", "Deriv2"]
all_traces = ["window_norm", "temp_norm", "smooth_series", "dif", "deriv", "deriv2"]
fig, names = wd2.make_dual_plot_abstract(time=s1.time, objects=[s1], names=all_names, traces=all_traces, title_arr=[""], )


# want to look at the observed data and the counterfactual ~ always cloesed 
fig = wd2.update_dual_plot(fig,  names, ["Window", "Observed Temp"],)
fig.add_trace(go.Scatter(x=sim_data["DateTime"], y=h.normalize(sim_data["Always Closed"]), mode='lines', name="Control (Always Closed)"))

fig.update_layout(autosize=False, width=1000, height=500,)

fig.show()
```

## Smoothing with STL
```{python}
fig.update_traces(visible=False,selector=dict(name="Control (Always Closed)"))

fig = wd2.update_dual_plot(fig,  names, ["Window", "Smoothed"],)
fig.show()

```

## Difference
```{python}
fig = wd2.update_dual_plot(fig,  names, ["Window", "Difference"],)
fig.show()
```

## Derivatives
```{python}
fig = wd2.update_dual_plot(fig,  names, ["Window", "Deriv1",],)
fig.show()
```

## Derivatives
```{python}
fig = wd2.update_dual_plot(fig,  names, ["Window", "Deriv1", "Deriv2"])
fig.show()
```

